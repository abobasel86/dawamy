<?php

namespace App\Http\Middleware;

use Closure;
use Illuminate\Http\Request;
use Symfony\Component\HttpFoundation\Response;

class EnsureJustificationIsProvided
{
    /**
     * Handle an incoming request.
     */
    public function handle(Request $request, Closure $next): Response
    {
        // โ ุงูุณูุงุญ ุฏุงุฆูุงู ุจุงููุตูู ููุณุงุฑุงุช ุตูุญุฉ ุงููุจุฑุฑ ูุชุณุฌูู ุงูุฎุฑูุฌ ูุชุฌูุจ ุงูุญููุฉ
        if ($request->routeIs('justification.*') || $request->routeIs('logout')) {
            return $next($request);
        }

        // ๐ ุฅุฐุง ูุงูุช ููุงู ุฌูุณุฉ ุชุญุชูู ุนูู ุฅุฌุฑุงุก ูุนููุ ุฅุนุงุฏุฉ ุงูุชูุฌูู ูุตูุญุฉ ุงููุจุฑุฑ
        if (session()->has('pending_justification')) {
            $pending = session('pending_justification');

            return redirect()->route('justification.create', [
                'type' => $pending['type'],
                'record_id' => $pending['record_id']
            ])->with('info', $pending['message'])
              ->with('error', 'ูุฌุจ ุนููู ุฅููุงู ูุฐุง ุงูุฅุฌุฑุงุก ุฃููุงู ูุจู ุงููุชุงุจุนุฉ.');
        }

        // โ ูู ุญุงู ุนุฏู ูุฌูุฏ ุฅุฌุฑุงุก ูุนููุ ููุณูุญ ุจุงููุชุงุจุนุฉ
        return $next($request);
    }
}
